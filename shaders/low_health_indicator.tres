[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://dnvswmboniho7"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_pjvm2"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 4.0]
operator = 5

[sub_resource type="FastNoiseLite" id="FastNoiseLite_omgjw"]
noise_type = 2

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_vnajj"]
seamless = true
noise = SubResource("FastNoiseLite_omgjw")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_b3xl6"]
output_port_for_preview = 0
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_vnajj")
texture_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_an832"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_l177k"]
expanded_output_ports = [0]
parameter_name = "indicator_color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pjfdv"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_ipfgp"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_54pfn"]
output_port_for_preview = 0
default_input_values = [1, Vector2(1, 1), 2, Vector2(-0.5, -0.5)]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_dv2pd"]
default_input_values = [1, Vector2(1.2, 1.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_p8olw"]
output_port_for_preview = 0
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 indicator_color : source_color;
uniform sampler2D tex_frg_2 : source_color;



void fragment() {
// ColorParameter:4
	vec4 n_out4p0 = indicator_color;
	float n_out4p4 = n_out4p0.a;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);
	float n_out2p1 = n_out2p0.r;


// FloatOp:3
	float n_out3p0 = n_out4p4 * n_out2p1;


// Input:5
	vec2 n_out5p0 = UV;


// UVFunc:7
	vec2 n_in7p1 = vec2(1.00000, 1.00000);
	vec2 n_in7p2 = vec2(-0.50000, -0.50000);
	vec2 n_out7p0 = n_in7p2 * n_in7p1 + n_out5p0;


// UVFunc:8
	vec2 n_in8p1 = vec2(1.20000, 1.50000);
	vec2 n_in8p2 = vec2(0.00000, 0.00000);
	vec2 n_out8p0 = (n_out7p0 - n_in8p2) * n_in8p1 + n_in8p2;


// VectorLen:6
	float n_out6p0 = length(n_out8p0);


// FloatOp:10
	float n_in10p1 = 4.00000;
	float n_out10p0 = pow(n_out6p0, n_in10p1);


// FloatOp:9
	float n_out9p0 = n_out3p0 * n_out10p0;


// Output:0
	COLOR.rgb = vec3(n_out4p0.xyz);
	COLOR.a = n_out9p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(540, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_b3xl6")
nodes/fragment/2/position = Vector2(-360, 480)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_an832")
nodes/fragment/3/position = Vector2(-120, 500)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_l177k")
nodes/fragment/4/position = Vector2(-400, -140)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_pjfdv")
nodes/fragment/5/position = Vector2(-1640, 240)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorLen_ipfgp")
nodes/fragment/6/position = Vector2(-800, 260)
nodes/fragment/7/node = SubResource("VisualShaderNodeUVFunc_54pfn")
nodes/fragment/7/position = Vector2(-1260, 260)
nodes/fragment/8/node = SubResource("VisualShaderNodeUVFunc_dv2pd")
nodes/fragment/8/position = Vector2(-1040, 260)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_p8olw")
nodes/fragment/9/position = Vector2(80, 260)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_pjvm2")
nodes/fragment/10/position = Vector2(-600, 160)
nodes/fragment/connections = PackedInt32Array(2, 1, 3, 1, 4, 0, 0, 0, 4, 4, 3, 0, 5, 0, 7, 0, 7, 0, 8, 0, 8, 0, 6, 0, 9, 0, 0, 1, 3, 0, 9, 0, 6, 0, 10, 0, 10, 0, 9, 1)
